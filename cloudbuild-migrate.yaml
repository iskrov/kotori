# Cloud Build configuration for database schema creation
# Uses Cloud SQL Auth Proxy - the Google-recommended approach for private Cloud SQL access

steps:
  # Start Cloud SQL Proxy in background
  - name: 'gcr.io/cloudsql-docker/gce-proxy:1.33.14'
    args:
      - '/cloud_sql_proxy'
      - '-instances=kotori-io:us-central1:kotori-db=tcp:5432'
    id: 'start-proxy'
    env:
      - 'GOOGLE_APPLICATION_CREDENTIALS=/workspace/gcloud-service-key.json'
    
  # Wait for proxy to be ready and run schema creation
  - name: 'postgres:15'
    args:
      - 'bash'
      - '-c'
      - |
        # Wait for proxy to start
        sleep 10
        
        # Create database schema using SQL
        PGPASSWORD=$$DB_PASSWORD psql -h 127.0.0.1 -p 5432 -U kotori_user -d kotori_prod <<EOF
        -- Enable UUID extension
        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        
        -- Create users table (essential for authentication)
        CREATE TABLE IF NOT EXISTS users (
            id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
            email VARCHAR UNIQUE NOT NULL,
            opaque_envelope BYTEA,
            google_id VARCHAR UNIQUE,
            first_name VARCHAR(100),
            last_name VARCHAR(100),
            display_name VARCHAR(150),
            phone VARCHAR(20),
            is_active BOOLEAN DEFAULT true,
            is_superuser BOOLEAN DEFAULT false,
            created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
            updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
        );
        
        -- Create essential indexes
        CREATE INDEX IF NOT EXISTS ix_users_email ON users(email);
        
        -- Create OPAQUE authentication tables
        CREATE TABLE IF NOT EXISTS opaque_sessions (
            session_id VARCHAR(64) PRIMARY KEY,
            user_id UUID NOT NULL,
            session_state VARCHAR(64) NOT NULL DEFAULT 'initialized',
            session_data BYTEA,
            expires_at TIMESTAMPTZ NOT NULL,
            created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
        );
        
        CREATE TABLE IF NOT EXISTS opaque_server_configs (
            id VARCHAR PRIMARY KEY DEFAULT 'default',
            server_setup TEXT NOT NULL,
            created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
            is_active BOOLEAN NOT NULL DEFAULT true
        );
        
        -- Verify tables were created
        SELECT 'Schema creation completed successfully!' as result;
        SELECT tablename FROM pg_tables WHERE schemaname = 'public' AND tablename IN ('users', 'opaque_sessions', 'opaque_server_configs');
        EOF
        
        echo "âœ… Database schema created successfully!"
    id: 'create-schema'
    secretEnv: ['DB_PASSWORD']
    waitFor: ['start-proxy']

# Get database password from Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/kotori-io/secrets/database-password/versions/latest
    env: 'DB_PASSWORD'

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '600s'  # 10 minutes
