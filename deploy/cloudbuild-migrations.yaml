# Cloud Build configuration for database migrations
# This runs migrations from within Google Cloud where database is accessible

steps:
  # Install Python dependencies
  - name: 'python:3.12-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd backend
        pip install -r requirements.txt
        echo "Dependencies installed"

  # Create database backup before migration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Creating database backup..."
        BACKUP_DESCRIPTION="pre-migration-$(date +%Y%m%d-%H%M%S)"
        gcloud sql backups create \
          --instance=kotori-db-instance \
          --description="$BACKUP_DESCRIPTION" \
          --project=kotori-io
        echo "Backup created: $BACKUP_DESCRIPTION"

  # Run database migrations
  - name: 'python:3.12-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd backend
        pip install -r requirements.txt
        
        # DATABASE_URL injected from Secret Manager
        if [[ -z "$DATABASE_URL" ]]; then
          echo "DATABASE_URL not set" && exit 1
        fi
        
        # Check current migration status
        echo "Current migration status:"
        alembic current || echo "No current revision (fresh database)"
        
        # Show target revision
        echo "Target revision:"
        alembic heads
        
        # Preview migrations
        echo "Migration preview:"
        alembic upgrade head --sql | head -20 || true
        
        # Execute migrations
        echo "Executing migrations..."
        alembic upgrade head
        
        # Verify success
        echo "Post-migration status:"
        alembic current
        
        echo "Migrations completed successfully!"
    secretEnv:
      - 'DATABASE_URL'

# Define secrets
availableSecrets:
  secretManager:
    - versionName: projects/kotori-io/secrets/database-url/versions/latest
      env: 'DATABASE_URL'

# Timeout and options
timeout: '1200s'
options:
  logging: CLOUD_LOGGING_ONLY
  pool:
    name: projects/kotori-io/locations/us-central1/workerPools/private-pool
