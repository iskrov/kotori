"""dual_authentication_oauth_plus_opaque_with_clean_secret_tags

Revision ID: 23ca77cbbca2
Revises: e795b20c4fa3
Create Date: 2025-07-20 15:32:45.718717

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23ca77cbbca2'
down_revision = 'e795b20c4fa3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag_sessions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('server_ephemeral', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['secret_tags.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tag_sessions_created_at', 'tag_sessions', ['created_at'], unique=False)
    op.create_index('idx_tag_sessions_tag_id', 'tag_sessions', ['tag_id'], unique=False)
    op.create_index('idx_tag_sessions_user_id', 'tag_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_tag_sessions_tag_id'), 'tag_sessions', ['tag_id'], unique=False)
    op.create_index(op.f('ix_tag_sessions_user_id'), 'tag_sessions', ['user_id'], unique=False)
    op.add_column('secret_tags', sa.Column('tag_handle', sa.LargeBinary(length=32), nullable=False))
    op.add_column('secret_tags', sa.Column('color', sa.String(length=7), nullable=True))
    op.drop_index('idx_secret_tags_phrase_hash', table_name='secret_tags')
    op.drop_index('ix_secret_tags_phrase_hash', table_name='secret_tags')
    op.create_index('idx_secret_tags_handle', 'secret_tags', ['tag_handle'], unique=True)
    op.create_index(op.f('ix_secret_tags_tag_handle'), 'secret_tags', ['tag_handle'], unique=True)
    op.drop_column('secret_tags', 'verifier_kv')
    op.drop_column('secret_tags', 'color_code')
    op.drop_column('secret_tags', 'phrase_hash')
    op.drop_column('secret_tags', 'salt')
    op.drop_constraint('tags_name_key', 'tags', type_='unique')
    op.create_unique_constraint('unique_user_tag', 'tags', ['user_id', 'name'])
    op.add_column('users', sa.Column('opaque_envelope', sa.LargeBinary(), nullable=True))
    op.add_column('users', sa.Column('show_secret_tag_names', sa.Boolean(), nullable=False, server_default=sa.text('true')))
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_column('users', 'show_secret_tag_names')
    op.drop_column('users', 'opaque_envelope')
    op.drop_constraint('unique_user_tag', 'tags', type_='unique')
    op.create_unique_constraint('tags_name_key', 'tags', ['name'])
    op.add_column('secret_tags', sa.Column('salt', postgresql.BYTEA(), autoincrement=False, nullable=False))
    op.add_column('secret_tags', sa.Column('phrase_hash', postgresql.BYTEA(), autoincrement=False, nullable=False))
    op.add_column('secret_tags', sa.Column('color_code', sa.VARCHAR(length=7), autoincrement=False, nullable=False))
    op.add_column('secret_tags', sa.Column('verifier_kv', postgresql.BYTEA(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_secret_tags_tag_handle'), table_name='secret_tags')
    op.drop_index('idx_secret_tags_handle', table_name='secret_tags')
    op.create_index('ix_secret_tags_phrase_hash', 'secret_tags', ['phrase_hash'], unique=False)
    op.create_index('idx_secret_tags_phrase_hash', 'secret_tags', ['phrase_hash'], unique=False)
    op.drop_column('secret_tags', 'color')
    op.drop_column('secret_tags', 'tag_handle')
    op.drop_index(op.f('ix_tag_sessions_user_id'), table_name='tag_sessions')
    op.drop_index(op.f('ix_tag_sessions_tag_id'), table_name='tag_sessions')
    op.drop_index('idx_tag_sessions_user_id', table_name='tag_sessions')
    op.drop_index('idx_tag_sessions_tag_id', table_name='tag_sessions')
    op.drop_index('idx_tag_sessions_created_at', table_name='tag_sessions')
    op.drop_table('tag_sessions')
    # ### end Alembic commands ###
