"""increase_hashed_password_length_for_opaque

Revision ID: 714a3380d102
Revises: a8fa7e169899
Create Date: 2025-07-19 00:00:35.837338

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '714a3380d102'
down_revision = 'a8fa7e169899'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_channels',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('channel_name', sa.String(length=100), nullable=False),
    sa.Column('channel_type', sa.String(length=50), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('retry_delay', sa.Integer(), nullable=False),
    sa.Column('rate_limit_count', sa.Integer(), nullable=True),
    sa.Column('rate_limit_window', sa.Integer(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alert_channels_enabled', 'alert_channels', ['enabled'], unique=False)
    op.create_index('idx_alert_channels_type', 'alert_channels', ['channel_type'], unique=False)
    op.create_index(op.f('ix_alert_channels_channel_name'), 'alert_channels', ['channel_name'], unique=True)
    op.create_index(op.f('ix_alert_channels_channel_type'), 'alert_channels', ['channel_type'], unique=False)
    op.create_index(op.f('ix_alert_channels_id'), 'alert_channels', ['id'], unique=False)
    op.create_table('alert_rules',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('rule_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('condition', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('suppression_duration', sa.Integer(), nullable=False),
    sa.Column('escalation_delay', sa.Integer(), nullable=False),
    sa.Column('delivery_channels', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('delivery_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alert_rules_enabled', 'alert_rules', ['enabled'], unique=False)
    op.create_index('idx_alert_rules_severity', 'alert_rules', ['severity'], unique=False)
    op.create_index(op.f('ix_alert_rules_id'), 'alert_rules', ['id'], unique=False)
    op.create_index(op.f('ix_alert_rules_rule_id'), 'alert_rules', ['rule_id'], unique=True)
    op.create_table('monitoring_configuration',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('config_key', sa.String(length=100), nullable=False),
    sa.Column('config_category', sa.String(length=50), nullable=False),
    sa.Column('config_value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('config_description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('config_version', sa.String(length=20), nullable=False),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_monitoring_config_category', 'monitoring_configuration', ['config_category'], unique=False)
    op.create_index('idx_monitoring_config_key', 'monitoring_configuration', ['config_key'], unique=False)
    op.create_index(op.f('ix_monitoring_configuration_config_category'), 'monitoring_configuration', ['config_category'], unique=False)
    op.create_index(op.f('ix_monitoring_configuration_config_key'), 'monitoring_configuration', ['config_key'], unique=True)
    op.create_index(op.f('ix_monitoring_configuration_id'), 'monitoring_configuration', ['id'], unique=False)
    op.create_table('monitoring_dashboards',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('dashboard_name', sa.String(length=100), nullable=False),
    sa.Column('dashboard_title', sa.String(length=255), nullable=False),
    sa.Column('dashboard_description', sa.Text(), nullable=True),
    sa.Column('dashboard_layout', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('dashboard_widgets', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('refresh_interval', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('allowed_users', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_monitoring_dashboards_active', 'monitoring_dashboards', ['is_active'], unique=False)
    op.create_index('idx_monitoring_dashboards_name', 'monitoring_dashboards', ['dashboard_name'], unique=False)
    op.create_index(op.f('ix_monitoring_dashboards_dashboard_name'), 'monitoring_dashboards', ['dashboard_name'], unique=True)
    op.create_index(op.f('ix_monitoring_dashboards_id'), 'monitoring_dashboards', ['id'], unique=False)
    op.create_table('monitoring_metrics',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_source', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('metric_unit', sa.String(length=20), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dimensions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('threshold_exceeded', sa.Boolean(), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_monitoring_metrics_name_timestamp', 'monitoring_metrics', ['metric_name', 'timestamp'], unique=False)
    op.create_index('idx_monitoring_metrics_source', 'monitoring_metrics', ['metric_source'], unique=False)
    op.create_index('idx_monitoring_metrics_type', 'monitoring_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_monitoring_metrics_id'), 'monitoring_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_monitoring_metrics_metric_name'), 'monitoring_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_monitoring_metrics_metric_source'), 'monitoring_metrics', ['metric_source'], unique=False)
    op.create_index(op.f('ix_monitoring_metrics_metric_type'), 'monitoring_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_monitoring_metrics_timestamp'), 'monitoring_metrics', ['timestamp'], unique=False)
    op.create_table('service_health',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('response_time_ms', sa.Float(), nullable=True),
    sa.Column('uptime_seconds', sa.Integer(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('request_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('health_check_passed', sa.Boolean(), nullable=True),
    sa.Column('health_check_message', sa.Text(), nullable=True),
    sa.Column('dependencies_healthy', sa.Boolean(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_service_health_service_timestamp', 'service_health', ['service_name', 'timestamp'], unique=False)
    op.create_index('idx_service_health_status', 'service_health', ['status'], unique=False)
    op.create_index(op.f('ix_service_health_id'), 'service_health', ['id'], unique=False)
    op.create_index(op.f('ix_service_health_service_name'), 'service_health', ['service_name'], unique=False)
    op.create_index(op.f('ix_service_health_status'), 'service_health', ['status'], unique=False)
    op.create_index(op.f('ix_service_health_timestamp'), 'service_health', ['timestamp'], unique=False)
    op.create_table('system_health',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('overall_status', sa.String(length=20), nullable=False),
    sa.Column('health_score', sa.Float(), nullable=False),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('disk_usage', sa.Float(), nullable=True),
    sa.Column('network_usage', sa.Float(), nullable=True),
    sa.Column('active_sessions', sa.Integer(), nullable=True),
    sa.Column('request_rate', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('response_time_p95', sa.Float(), nullable=True),
    sa.Column('security_events', sa.Integer(), nullable=True),
    sa.Column('threat_score', sa.Float(), nullable=True),
    sa.Column('alert_count', sa.Integer(), nullable=True),
    sa.Column('critical_alerts', sa.Integer(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_health_score', 'system_health', ['health_score'], unique=False)
    op.create_index('idx_system_health_status', 'system_health', ['overall_status'], unique=False)
    op.create_index('idx_system_health_timestamp', 'system_health', ['timestamp'], unique=False)
    op.create_index(op.f('ix_system_health_health_score'), 'system_health', ['health_score'], unique=False)
    op.create_index(op.f('ix_system_health_id'), 'system_health', ['id'], unique=False)
    op.create_index(op.f('ix_system_health_overall_status'), 'system_health', ['overall_status'], unique=False)
    op.create_index(op.f('ix_system_health_timestamp'), 'system_health', ['timestamp'], unique=False)
    op.create_table('alerts',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('acknowledged_by', sa.String(length=100), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_by', sa.String(length=100), nullable=True),
    sa.Column('escalation_level', sa.Integer(), nullable=False),
    sa.Column('escalated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_attempts', sa.Integer(), nullable=False),
    sa.Column('last_delivery_attempt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_channels', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('threat_score', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('impact_score', sa.Float(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rule_id', app.models.base.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['alert_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alerts_created_at', 'alerts', ['created_at'], unique=False)
    op.create_index('idx_alerts_severity', 'alerts', ['severity'], unique=False)
    op.create_index('idx_alerts_source', 'alerts', ['source'], unique=False)
    op.create_index('idx_alerts_type_status', 'alerts', ['alert_type', 'status'], unique=False)
    op.create_index(op.f('ix_alerts_alert_type'), 'alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_severity'), 'alerts', ['severity'], unique=False)
    op.create_index(op.f('ix_alerts_source'), 'alerts', ['source'], unique=False)
    op.create_index(op.f('ix_alerts_status'), 'alerts', ['status'], unique=False)
    op.create_table('alert_escalations',
    sa.Column('id', app.models.base.UUID(), nullable=False),
    sa.Column('alert_id', app.models.base.UUID(), nullable=False),
    sa.Column('escalation_level', sa.Integer(), nullable=False),
    sa.Column('escalation_reason', sa.String(length=255), nullable=False),
    sa.Column('escalation_action', sa.String(length=100), nullable=False),
    sa.Column('escalation_successful', sa.Boolean(), nullable=True),
    sa.Column('escalation_message', sa.Text(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alert_escalations_alert_id', 'alert_escalations', ['alert_id'], unique=False)
    op.create_index('idx_alert_escalations_level', 'alert_escalations', ['escalation_level'], unique=False)
    op.create_index(op.f('ix_alert_escalations_alert_id'), 'alert_escalations', ['alert_id'], unique=False)
    op.create_index(op.f('ix_alert_escalations_id'), 'alert_escalations', ['id'], unique=False)
    op.drop_table('migration_log')
    op.drop_index('idx_journal_entries_entry_date', table_name='journal_entries')
    op.drop_index('idx_journal_entries_secret_tag_id', table_name='journal_entries')
    op.drop_index('idx_journal_entries_user_created', table_name='journal_entries')
    op.drop_index('idx_journal_entries_user_entry_date', table_name='journal_entries')
    op.drop_index('idx_journal_entries_user_id', table_name='journal_entries')
    op.create_index(op.f('ix_journal_entries_id'), 'journal_entries', ['id'], unique=False)
    op.create_index(op.f('ix_journal_entries_secret_tag_id'), 'journal_entries', ['secret_tag_id'], unique=False)
    op.create_index(op.f('ix_journal_entries_user_id'), 'journal_entries', ['user_id'], unique=False)
    op.drop_index('idx_journal_entry_tags_entry_id', table_name='journal_entry_tags')
    op.drop_index('idx_journal_entry_tags_tag_id', table_name='journal_entry_tags')
    op.drop_constraint('unique_entry_tag', 'journal_entry_tags', type_='unique')
    op.create_index(op.f('ix_journal_entry_tags_id'), 'journal_entry_tags', ['id'], unique=False)
    op.drop_index('idx_opaque_sessions_last_activity', table_name='opaque_sessions')
    op.drop_index('idx_opaque_sessions_phrase_hash', table_name='opaque_sessions')
    op.create_index(op.f('ix_opaque_sessions_user_id'), 'opaque_sessions', ['user_id'], unique=False)
    op.drop_column('opaque_sessions', 'phrase_hash')
    op.drop_index('idx_reminders_is_active', table_name='reminders')
    op.drop_index('idx_reminders_user_created', table_name='reminders')
    op.drop_index('idx_reminders_user_id', table_name='reminders')
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_index(op.f('ix_reminders_user_id'), 'reminders', ['user_id'], unique=False)
    op.drop_constraint('secret_tags_phrase_hash_key', 'secret_tags', type_='unique')
    op.drop_constraint('unique_user_secret_tag', 'secret_tags', type_='unique')
    op.create_index(op.f('ix_secret_tags_phrase_hash'), 'secret_tags', ['phrase_hash'], unique=True)
    op.create_index(op.f('ix_secret_tags_user_id'), 'secret_tags', ['user_id'], unique=False)
    op.drop_index('idx_security_alerts_alert_type', table_name='security_alerts')
    op.drop_index('idx_security_alerts_correlation_id', table_name='security_alerts')
    op.drop_index('idx_security_alerts_first_seen', table_name='security_alerts')
    op.drop_index('idx_security_alerts_severity', table_name='security_alerts')
    op.drop_index('idx_security_alerts_status', table_name='security_alerts')
    op.drop_index('idx_security_alerts_user_id_hash', table_name='security_alerts')
    op.create_index('idx_alerts_status_time', 'security_alerts', ['status', 'first_seen'], unique=False)
    op.create_index('idx_alerts_type_severity', 'security_alerts', ['alert_type', 'severity'], unique=False)
    op.create_index('idx_alerts_user_time', 'security_alerts', ['user_id_hash', 'first_seen'], unique=False)
    op.create_index(op.f('ix_security_alerts_alert_type'), 'security_alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_security_alerts_correlation_id'), 'security_alerts', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_security_alerts_first_seen'), 'security_alerts', ['first_seen'], unique=False)
    op.create_index(op.f('ix_security_alerts_severity'), 'security_alerts', ['severity'], unique=False)
    op.create_index(op.f('ix_security_alerts_status'), 'security_alerts', ['status'], unique=False)
    op.create_index(op.f('ix_security_alerts_user_id_hash'), 'security_alerts', ['user_id_hash'], unique=False)
    op.add_column('security_audit_logs', sa.Column('extra_data', sa.Text(), nullable=True))
    op.drop_index('idx_security_audit_logs_correlation_id', table_name='security_audit_logs')
    op.drop_index('idx_security_audit_logs_event_category', table_name='security_audit_logs')
    op.drop_index('idx_security_audit_logs_event_type', table_name='security_audit_logs')
    op.drop_index('idx_security_audit_logs_severity', table_name='security_audit_logs')
    op.drop_index('idx_security_audit_logs_timestamp', table_name='security_audit_logs')
    op.drop_index('idx_security_audit_logs_user_id_hash', table_name='security_audit_logs')
    op.create_index('idx_audit_logs_category_severity', 'security_audit_logs', ['event_category', 'severity'], unique=False)
    op.create_index('idx_audit_logs_correlation', 'security_audit_logs', ['correlation_id'], unique=False)
    op.create_index('idx_audit_logs_event_type', 'security_audit_logs', ['event_type'], unique=False)
    op.create_index('idx_audit_logs_timestamp', 'security_audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_user_time', 'security_audit_logs', ['user_id_hash', 'timestamp'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_correlation_id'), 'security_audit_logs', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_event_category'), 'security_audit_logs', ['event_category'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_event_type'), 'security_audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_session_id_hash'), 'security_audit_logs', ['session_id_hash'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_severity'), 'security_audit_logs', ['severity'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_timestamp'), 'security_audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_user_id_hash'), 'security_audit_logs', ['user_id_hash'], unique=False)
    op.add_column('security_metrics', sa.Column('metric_value', sa.Integer(), nullable=False))
    op.add_column('security_metrics', sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('security_metrics', sa.Column('category', sa.String(length=50), nullable=False))
    op.add_column('security_metrics', sa.Column('subcategory', sa.String(length=50), nullable=True))
    op.add_column('security_metrics', sa.Column('threshold_value', sa.Integer(), nullable=True))
    op.add_column('security_metrics', sa.Column('threshold_type', sa.String(length=20), nullable=True))
    op.add_column('security_metrics', sa.Column('alert_triggered', sa.Boolean(), nullable=False))
    op.add_column('security_metrics', sa.Column('dimensions', sa.Text(), nullable=True))
    op.add_column('security_metrics', sa.Column('extra_data', sa.Text(), nullable=True))
    op.drop_index('idx_security_metrics_metric_name', table_name='security_metrics')
    op.drop_index('idx_security_metrics_window_end', table_name='security_metrics')
    op.drop_index('idx_security_metrics_window_start', table_name='security_metrics')
    op.create_index('idx_security_metrics_alert', 'security_metrics', ['alert_triggered'], unique=False)
    op.create_index('idx_security_metrics_category', 'security_metrics', ['category'], unique=False)
    op.create_index('idx_security_metrics_name_time', 'security_metrics', ['metric_name', 'timestamp'], unique=False)
    op.create_index(op.f('ix_security_metrics_category'), 'security_metrics', ['category'], unique=False)
    op.create_index(op.f('ix_security_metrics_metric_name'), 'security_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_security_metrics_metric_type'), 'security_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_security_metrics_subcategory'), 'security_metrics', ['subcategory'], unique=False)
    op.create_index(op.f('ix_security_metrics_timestamp'), 'security_metrics', ['timestamp'], unique=False)
    op.drop_column('security_metrics', 'window_start')
    op.drop_column('security_metrics', 'value')
    op.drop_column('security_metrics', 'min_value')
    op.drop_column('security_metrics', 'max_value')
    op.drop_column('security_metrics', 'avg_value')
    op.drop_column('security_metrics', 'created_at')
    op.drop_column('security_metrics', 'window_end')
    op.drop_column('security_metrics', 'updated_at')
    op.drop_column('security_metrics', 'tags')
    op.drop_index('idx_tags_name', table_name='tags')
    op.drop_index('idx_tags_user_created', table_name='tags')
    op.drop_index('idx_tags_user_id', table_name='tags')
    op.drop_constraint('unique_user_tag', 'tags', type_='unique')
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_user_id'), 'tags', ['user_id'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('idx_users_account_tier', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_email_verified', table_name='users')
    op.drop_index('idx_users_google_id', table_name='users')
    op.drop_index('idx_users_is_active', table_name='users')
    op.drop_index('idx_users_last_seen_at', table_name='users')
    op.drop_index('idx_users_referred_by_user_id', table_name='users')
    op.drop_index('idx_users_registration_source', table_name='users')
    op.drop_index('idx_users_subscription_status', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_constraint('fk_users_referred_by', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'users', ['referred_by_user_id'], ['id'])
    op.drop_index('idx_vault_blobs_wrapped_key_id', table_name='vault_blobs')
    op.drop_constraint('unique_vault_object', 'vault_blobs', type_='unique')
    op.create_index('idx_vault_blobs_wrapped_key', 'vault_blobs', ['wrapped_key_id'], unique=False)
    op.create_index(op.f('ix_vault_blobs_wrapped_key_id'), 'vault_blobs', ['wrapped_key_id'], unique=False)
    op.drop_column('vault_blobs', 'id')
    op.create_index(op.f('ix_wrapped_keys_tag_id'), 'wrapped_keys', ['tag_id'], unique=False)
    op.create_index(op.f('ix_wrapped_keys_vault_id'), 'wrapped_keys', ['vault_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_wrapped_keys_vault_id'), table_name='wrapped_keys')
    op.drop_index(op.f('ix_wrapped_keys_tag_id'), table_name='wrapped_keys')
    op.add_column('vault_blobs', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_vault_blobs_wrapped_key_id'), table_name='vault_blobs')
    op.drop_index('idx_vault_blobs_wrapped_key', table_name='vault_blobs')
    op.create_unique_constraint('unique_vault_object', 'vault_blobs', ['vault_id', 'object_id'])
    op.create_index('idx_vault_blobs_wrapped_key_id', 'vault_blobs', ['wrapped_key_id'], unique=False)
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('fk_users_referred_by', 'users', 'users', ['referred_by_user_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_subscription_status', 'users', ['subscription_status'], unique=False)
    op.create_index('idx_users_registration_source', 'users', ['registration_source'], unique=False)
    op.create_index('idx_users_referred_by_user_id', 'users', ['referred_by_user_id'], unique=False)
    op.create_index('idx_users_last_seen_at', 'users', ['last_seen_at'], unique=False)
    op.create_index('idx_users_is_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_users_google_id', 'users', ['google_id'], unique=False)
    op.create_index('idx_users_email_verified', 'users', ['email_verified'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_account_tier', 'users', ['account_tier'], unique=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_index(op.f('ix_tags_user_id'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.create_unique_constraint('unique_user_tag', 'tags', ['user_id', 'name'])
    op.create_index('idx_tags_user_id', 'tags', ['user_id'], unique=False)
    op.create_index('idx_tags_user_created', 'tags', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_tags_name', 'tags', ['name'], unique=False)
    op.add_column('security_metrics', sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('security_metrics', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('security_metrics', sa.Column('window_end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('security_metrics', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('security_metrics', sa.Column('avg_value', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('security_metrics', sa.Column('max_value', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('security_metrics', sa.Column('min_value', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('security_metrics', sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('security_metrics', sa.Column('window_start', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_security_metrics_timestamp'), table_name='security_metrics')
    op.drop_index(op.f('ix_security_metrics_subcategory'), table_name='security_metrics')
    op.drop_index(op.f('ix_security_metrics_metric_type'), table_name='security_metrics')
    op.drop_index(op.f('ix_security_metrics_metric_name'), table_name='security_metrics')
    op.drop_index(op.f('ix_security_metrics_category'), table_name='security_metrics')
    op.drop_index('idx_security_metrics_name_time', table_name='security_metrics')
    op.drop_index('idx_security_metrics_category', table_name='security_metrics')
    op.drop_index('idx_security_metrics_alert', table_name='security_metrics')
    op.create_index('idx_security_metrics_window_start', 'security_metrics', ['window_start'], unique=False)
    op.create_index('idx_security_metrics_window_end', 'security_metrics', ['window_end'], unique=False)
    op.create_index('idx_security_metrics_metric_name', 'security_metrics', ['metric_name'], unique=False)
    op.drop_column('security_metrics', 'extra_data')
    op.drop_column('security_metrics', 'dimensions')
    op.drop_column('security_metrics', 'alert_triggered')
    op.drop_column('security_metrics', 'threshold_type')
    op.drop_column('security_metrics', 'threshold_value')
    op.drop_column('security_metrics', 'subcategory')
    op.drop_column('security_metrics', 'category')
    op.drop_column('security_metrics', 'timestamp')
    op.drop_column('security_metrics', 'metric_value')
    op.drop_index(op.f('ix_security_audit_logs_user_id_hash'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_timestamp'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_severity'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_session_id_hash'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_event_type'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_event_category'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_correlation_id'), table_name='security_audit_logs')
    op.drop_index('idx_audit_logs_user_time', table_name='security_audit_logs')
    op.drop_index('idx_audit_logs_timestamp', table_name='security_audit_logs')
    op.drop_index('idx_audit_logs_event_type', table_name='security_audit_logs')
    op.drop_index('idx_audit_logs_correlation', table_name='security_audit_logs')
    op.drop_index('idx_audit_logs_category_severity', table_name='security_audit_logs')
    op.create_index('idx_security_audit_logs_user_id_hash', 'security_audit_logs', ['user_id_hash'], unique=False)
    op.create_index('idx_security_audit_logs_timestamp', 'security_audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_security_audit_logs_severity', 'security_audit_logs', ['severity'], unique=False)
    op.create_index('idx_security_audit_logs_event_type', 'security_audit_logs', ['event_type'], unique=False)
    op.create_index('idx_security_audit_logs_event_category', 'security_audit_logs', ['event_category'], unique=False)
    op.create_index('idx_security_audit_logs_correlation_id', 'security_audit_logs', ['correlation_id'], unique=False)
    op.drop_column('security_audit_logs', 'extra_data')
    op.drop_index(op.f('ix_security_alerts_user_id_hash'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_status'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_severity'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_first_seen'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_correlation_id'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_alert_type'), table_name='security_alerts')
    op.drop_index('idx_alerts_user_time', table_name='security_alerts')
    op.drop_index('idx_alerts_type_severity', table_name='security_alerts')
    op.drop_index('idx_alerts_status_time', table_name='security_alerts')
    op.create_index('idx_security_alerts_user_id_hash', 'security_alerts', ['user_id_hash'], unique=False)
    op.create_index('idx_security_alerts_status', 'security_alerts', ['status'], unique=False)
    op.create_index('idx_security_alerts_severity', 'security_alerts', ['severity'], unique=False)
    op.create_index('idx_security_alerts_first_seen', 'security_alerts', ['first_seen'], unique=False)
    op.create_index('idx_security_alerts_correlation_id', 'security_alerts', ['correlation_id'], unique=False)
    op.create_index('idx_security_alerts_alert_type', 'security_alerts', ['alert_type'], unique=False)
    op.drop_index(op.f('ix_secret_tags_user_id'), table_name='secret_tags')
    op.drop_index(op.f('ix_secret_tags_phrase_hash'), table_name='secret_tags')
    op.create_unique_constraint('unique_user_secret_tag', 'secret_tags', ['user_id', 'tag_name'])
    op.create_unique_constraint('secret_tags_phrase_hash_key', 'secret_tags', ['phrase_hash'])
    op.drop_index(op.f('ix_reminders_user_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.create_index('idx_reminders_user_id', 'reminders', ['user_id'], unique=False)
    op.create_index('idx_reminders_user_created', 'reminders', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_reminders_is_active', 'reminders', ['is_active'], unique=False)
    op.add_column('opaque_sessions', sa.Column('phrase_hash', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_opaque_sessions_user_id'), table_name='opaque_sessions')
    op.create_index('idx_opaque_sessions_phrase_hash', 'opaque_sessions', ['phrase_hash'], unique=False)
    op.create_index('idx_opaque_sessions_last_activity', 'opaque_sessions', ['last_activity'], unique=False)
    op.drop_index(op.f('ix_journal_entry_tags_id'), table_name='journal_entry_tags')
    op.create_unique_constraint('unique_entry_tag', 'journal_entry_tags', ['entry_id', 'tag_id'])
    op.create_index('idx_journal_entry_tags_tag_id', 'journal_entry_tags', ['tag_id'], unique=False)
    op.create_index('idx_journal_entry_tags_entry_id', 'journal_entry_tags', ['entry_id'], unique=False)
    op.drop_index(op.f('ix_journal_entries_user_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_secret_tag_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_id'), table_name='journal_entries')
    op.create_index('idx_journal_entries_user_id', 'journal_entries', ['user_id'], unique=False)
    op.create_index('idx_journal_entries_user_entry_date', 'journal_entries', ['user_id', 'entry_date'], unique=False)
    op.create_index('idx_journal_entries_user_created', 'journal_entries', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_journal_entries_secret_tag_id', 'journal_entries', ['secret_tag_id'], unique=False)
    op.create_index('idx_journal_entries_entry_date', 'journal_entries', ['entry_date'], unique=False)
    op.create_table('migration_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('operation', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='migration_log_pkey')
    )
    op.drop_index(op.f('ix_alert_escalations_id'), table_name='alert_escalations')
    op.drop_index(op.f('ix_alert_escalations_alert_id'), table_name='alert_escalations')
    op.drop_index('idx_alert_escalations_level', table_name='alert_escalations')
    op.drop_index('idx_alert_escalations_alert_id', table_name='alert_escalations')
    op.drop_table('alert_escalations')
    op.drop_index(op.f('ix_alerts_status'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_source'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_severity'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_type'), table_name='alerts')
    op.drop_index('idx_alerts_type_status', table_name='alerts')
    op.drop_index('idx_alerts_source', table_name='alerts')
    op.drop_index('idx_alerts_severity', table_name='alerts')
    op.drop_index('idx_alerts_created_at', table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_system_health_timestamp'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_overall_status'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_id'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_health_score'), table_name='system_health')
    op.drop_index('idx_system_health_timestamp', table_name='system_health')
    op.drop_index('idx_system_health_status', table_name='system_health')
    op.drop_index('idx_system_health_score', table_name='system_health')
    op.drop_table('system_health')
    op.drop_index(op.f('ix_service_health_timestamp'), table_name='service_health')
    op.drop_index(op.f('ix_service_health_status'), table_name='service_health')
    op.drop_index(op.f('ix_service_health_service_name'), table_name='service_health')
    op.drop_index(op.f('ix_service_health_id'), table_name='service_health')
    op.drop_index('idx_service_health_status', table_name='service_health')
    op.drop_index('idx_service_health_service_timestamp', table_name='service_health')
    op.drop_table('service_health')
    op.drop_index(op.f('ix_monitoring_metrics_timestamp'), table_name='monitoring_metrics')
    op.drop_index(op.f('ix_monitoring_metrics_metric_type'), table_name='monitoring_metrics')
    op.drop_index(op.f('ix_monitoring_metrics_metric_source'), table_name='monitoring_metrics')
    op.drop_index(op.f('ix_monitoring_metrics_metric_name'), table_name='monitoring_metrics')
    op.drop_index(op.f('ix_monitoring_metrics_id'), table_name='monitoring_metrics')
    op.drop_index('idx_monitoring_metrics_type', table_name='monitoring_metrics')
    op.drop_index('idx_monitoring_metrics_source', table_name='monitoring_metrics')
    op.drop_index('idx_monitoring_metrics_name_timestamp', table_name='monitoring_metrics')
    op.drop_table('monitoring_metrics')
    op.drop_index(op.f('ix_monitoring_dashboards_id'), table_name='monitoring_dashboards')
    op.drop_index(op.f('ix_monitoring_dashboards_dashboard_name'), table_name='monitoring_dashboards')
    op.drop_index('idx_monitoring_dashboards_name', table_name='monitoring_dashboards')
    op.drop_index('idx_monitoring_dashboards_active', table_name='monitoring_dashboards')
    op.drop_table('monitoring_dashboards')
    op.drop_index(op.f('ix_monitoring_configuration_id'), table_name='monitoring_configuration')
    op.drop_index(op.f('ix_monitoring_configuration_config_key'), table_name='monitoring_configuration')
    op.drop_index(op.f('ix_monitoring_configuration_config_category'), table_name='monitoring_configuration')
    op.drop_index('idx_monitoring_config_key', table_name='monitoring_configuration')
    op.drop_index('idx_monitoring_config_category', table_name='monitoring_configuration')
    op.drop_table('monitoring_configuration')
    op.drop_index(op.f('ix_alert_rules_rule_id'), table_name='alert_rules')
    op.drop_index(op.f('ix_alert_rules_id'), table_name='alert_rules')
    op.drop_index('idx_alert_rules_severity', table_name='alert_rules')
    op.drop_index('idx_alert_rules_enabled', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index(op.f('ix_alert_channels_id'), table_name='alert_channels')
    op.drop_index(op.f('ix_alert_channels_channel_type'), table_name='alert_channels')
    op.drop_index(op.f('ix_alert_channels_channel_name'), table_name='alert_channels')
    op.drop_index('idx_alert_channels_type', table_name='alert_channels')
    op.drop_index('idx_alert_channels_enabled', table_name='alert_channels')
    op.drop_table('alert_channels')
    # ### end Alembic commands ###
