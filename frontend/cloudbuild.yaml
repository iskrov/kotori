steps:
  # 1. Install npm dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    id: 'npm-install'

  # 2. Build the web application using secrets from Secret Manager
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'npx'
    args: ['expo', 'export:web']
    secretEnv: ['EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID', 'EXPO_PUBLIC_APP_SECRET']
    id: 'expo-build'

  # 3. Build the final nginx Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/kotori-images/kotori-app:${_TAG_NAME}',
      '.'
    ]
    id: 'docker-build'

# Push the final image to Google Artifact Registry
images:
- 'us-central1-docker.pkg.dev/${PROJECT_ID}/kotori-images/kotori-app:${_TAG_NAME}'

# Make secrets available to the build steps
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/expo-public-google-web-client-id/versions/latest
    env: 'EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID'
  - versionName: projects/${PROJECT_ID}/secrets/expo-public-app-secret/versions/latest
    env: 'EXPO_PUBLIC_APP_SECRET'

# Define substitutions that can be passed from the command line (e.g., the image tag)
substitutions:
  _TAG_NAME: 'latest' # Default value if not provided

timeout: '1200s'
